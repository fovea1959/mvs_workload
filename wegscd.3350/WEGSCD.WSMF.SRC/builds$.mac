//WEGSCD$  JOB (DOUG,5278),COMPILE.SMF.SPLUNK,CLASS=A,MSGCLASS=X,
//             MSGLEVEL=(1,0)
//        EXEC PL1LFCL,REGION.PL1L=256K,
//  PARM.PL1L='N=PLISMFS,ATR,M,XREF,NS2,SIZE=999999,LC=60,SM=(2,72,1)',
//  PARM.LKED='NOXREF,LIST'
//PL1L.SYSPRINT DD SYSOUT=*
//PL1L.SYSLIB DD DSN=WEGSCD.PLISMF.SRC,DISP=SHR
//PL1L.SYSIN DD *
 SMFPLNK: PROC OPTIONS(MAIN);

 %INCLUDE DOTH;
 %INCLUDE FSMFTIME;
 %INCLUDE FTMSTMP;
 %INCLUDE FCC;
 %INCLUDE FBIN31;
 %INCLUDE FJOBID;
 %INCLUDE FSTEPID;
 %INCLUDE FCPUTIME;
 %INCLUDE PTRADD;
 %INCLUDE PTRDIFF;
 %INCLUDE TRIM8;
1DCL     SMFDATA                   INPUT RECORD;
 DCL     EOF_SMF                   BIT(1)        INIT('0'B);

 DCL     RECORDS_READ              FIXED DEC(9)  INIT(0);
 DCL     RECORDS_SEL               FIXED DEC(9)  INIT(0);

 DCL     SYSPRINT                  PRINT;
 DCL     REPORT                    STREAM OUTPUT;

 DCL     SMFP                      POINTER;
 DCL 1   SMF                       UNALIGNED BASED(SMFP),
 %INCLUDE SMFXX;
1ON ENDFILE(SMFDATA)  EOF_SMF='1'B;
 OPEN FILE(REPORT) OUTPUT STREAM LINESIZE(80);

 READ FILE(SMFDATA) SET(SMFP);
 DO WHILE(^EOF_SMF);

     RECORDS_READ=RECORDS_READ+1;

     IF (SMF.SMFXRTY = 0) THEN DO;
       CALL IPL;
       END;
     IF (SMF.SMFXRTY = 4) THEN DO;
       CALL STEPTERM;
       END;
     IF (SMF.SMFXRTY = 5) THEN DO;
       CALL JOBTERM;
       END;
     /* SMF TYPE 20S MAY BE DIRTY IF FROM TSO (BAD PROGRAMMER FIELD) */
     IF (SMFXRTY = 20) THEN DO;
       CALL JOBINIT;
       END;
     IF (SMFXRTY = 26) THEN DO;
       CALL JES2JOBPURGE;
       END;
     IF (SMF.SMFXRTY = 34) THEN DO;
       CALL TSTERM;
       END;

     READ FILE(SMFDATA) SET(SMFP);

     END; /* DO WHILE */

 PUT SKIP(2) EDIT(RECORDS_READ,' SMF RECORDS READ')
                 (P'ZZZ,ZZZ,ZZ9',A);
 PUT SKIP(1) EDIT(RECORDS_SEL, ' SMF RECORDS SELECTED')
                 (P'ZZZ,ZZZ,ZZ9',A);

 RETURN;
1DCL EVENTSTART ENTRY;

 EVENTSTART: PROC(T,S);
   DCL T CHAR(8) VARYING;
   DCL S CHAR(80) VARYING;
   PUT FILE(REPORT) SKIP EDIT (
     '*EVENT TIME=', F_TIMESTAMP(SMF.SMFXDTE, SMF.SMFXTME),
     ' TYPE=', T,
     ' TYPECODE=', F_BIN31(FIXED(SMF.SMFXRTY,31,0)),
     ' SID=', SMF.SMFXSID,
     S
   ) (
       A, A,
       A, A,
       A, A,
       A, A,
       A
   );
 END EVENTSTART;
1/********************************************************************/
 /*      P R O C E S S   S M F   R E C O R D S                       */
 /********************************************************************/

 /*-------------------------------*/
 /* PROCESS IPL EVENT             */
 /*-------------------------------*/
 IPL: PROC;
   DCL 1 SMF00 UNALIGNED BASED(SMFP),
 %INCLUDE SMF00;

   DCL A CHAR(80) VARYING;

   PUT STRING(A) EDIT (
     ' VS=', F_BIN31(SMF0VST),
     ' CS=', F_BIN31(SMF0RST)
   ) (
     A, A,
     A, A
   );
   CALL EVENTSTART('IPL', A);

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END IPL;

 /*-------------------------------*/
 /* PROCESS STEP TERMINATION      */
 /*-------------------------------*/
 STEPTERM: PROC;
   DCL 1 SMF04 UNALIGNED BASED(SMFP),
 %INCLUDE SMF04;

   DCL SMF04ACCTP POINTER;
   DCL 1 SMF04ACCT UNALIGNED BASED(SMF04ACCTP),
 %INCLUDE SMF04ACC;

   DCL P_OFFSET FIXED BIN(31);

   P_OFFSET = PTRDIFF(SMFP, ADDR(SMF04.SMF4LENN));
   P_OFFSET = P_OFFSET + SMF04.SMF4LENN;
   SMF04ACCTP = PTRADD (SMFP, P_OFFSET);

   CALL EVENTSTART('STEPTERM', '');

   PUT FILE(REPORT) SKIP EDIT (
     ' JOBID=', F_JOBID(SMF4JBN, SMF4RSD, SMF4RST),
     ' STEPID=',
       F_STEPID(SMF4JBN, SMF4RSD, SMF4RST, FIXED(SMF4STN, 31))
   ) (
     A, A,
     A, A
   );

   /* TODO PREPROCESS PROGRAM FOR PGM *.DD */
   PUT FILE(REPORT) SKIP EDIT (
     ' JOB=', TRIM8(SMF4JBN),
     ' STEP=', TRIM8(SMF4STMN),
     ' CC=', F_CC(SMF4SCC,SMF4STI),
     ' PROGRAM=', TRIM8(SMF4PGMN)
   ) (
     A, A,
     A, A,
     A, A,
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' REGION=', F_BIN31(SMF4RSH0),
     ' MEMLOW=', F_BIN31(FIXED(SMF4HOST,31,0)),
     ' MEMHIGH=', F_BIN31(FIXED(SMF4SYST,31,0)),
     ' INIT=', F_TIMESTAMP(SMF4STID, SMF4SIT)
   ) (
     A, A,
     A, A,
     A, A,
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' SRB=', F_CPUTIME(FIXED(SMF4SRBT,31,0)),
     ' TCB=', F_CPUTIME(FIXED(SMF4SETM,31,0)),
     ' CPU=', F_CPUTIME(FIXED(SMF4SETM+SMF4SRBT,31,0))
   ) (
     A, A,
     A, A,
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END STEPTERM;
1JOBTERM: PROC;
   DCL 1 SMF05 UNALIGNED BASED(SMFP),
 %INCLUDE SMF05;

   CALL EVENTSTART('JOBTERM', '');

   PUT FILE(REPORT) SKIP EDIT (
     ' JOBID=', F_JOBID(SMF5JBN, SMF5RSD, SMF5RST)
   ) (
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' CLASS=', SMF5JICL,
     ' CC=', F_CC(SMF5JCC,SMF5JBTI),
     ' CPU=', F_CPUTIME(FIXED(SMF5SRBT,31,0)),
     ' SERVICE=', SMF5TJS
   ) (
     A, A,
     A, A,
     A, A,
     A, P'999999'
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' INIT=', F_TIMESTAMP(SMF5JID, SMF5JIT)
   ) (
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' PROGRAMMER="', SMF5PRGN, '"'
   ) (
     A, A, A
   );

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END JOBTERM;
1JOBINIT: PROC;
   DCL 1 SMF20 UNALIGNED BASED(SMFP),
 %INCLUDE SMF20;

   DCL A CHAR(80) VARYING;

   PUT STRING(A) EDIT (
     ' JOBID=', F_JOBID(SMF20JBN, SMF20RSD, SMF20RST)
   ) (
     A, A
   );

   CALL EVENTSTART('JOBINIT', A);

   PUT FILE(REPORT) SKIP EDIT (
     ' JOB=', TRIM8(SMF20JBN),
     ' PROGRAMMER="', SMF20PGM, '"'
   ) (
     A, A,
     A, A, A
   );

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END JOBINIT;
1JES2JOBPURGE: PROC;
   DCL 1 SMF26 UNALIGNED BASED(SMFP),
 %INCLUDE SMF26;

   DCL SMF26EVTP POINTER;
   DCL 1 SMF26EVENTS UNALIGNED BASED(SMF26EVTP),
 %INCLUDE SMF26EVT;

   DCL SMF26ACTP POINTER;
   DCL 1 SMF26ACTUALS UNALIGNED BASED(SMF26ACTP),
 %INCLUDE SMF26ACT;

   DCL P_OFFSET FIXED BIN(31);

   P_OFFSET = PTRDIFF(SMFP, ADDR(SMF26.SMF26LN1));
   P_OFFSET = P_OFFSET + SMF26.SMF26LN1;
   SMF26EVTP = PTRADD(SMFP, P_OFFSET);
   P_OFFSET = P_OFFSET + SMF26EVENTS.SMF26LN2;
   SMF26ACTP = PTRADD(SMFP, P_OFFSET);

   CALL EVENTSTART('JESPURGE', '');

   PUT FILE(REPORT) SKIP EDIT (
     ' JOBID=', F_JOBID(SMF26JBN, SMF26RSD, SMF26RST),
     ' JOB=', TRIM8(SMF26JBN),
     ' JESID="', SMF26JID, '"'
   ) (
     A, A,
     A, A, A,
     A, A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' JOBCLASS="', SMF26CLS, '"',
     ' MSGCLASS="', SMF26MSG, '"',
     ' PUNCH=', F_BIN31(SMF26XPU),
     ' LINES=', F_BIN31(SMF26XLN)
   ) (
     A, A, A,
     A, A, A,
     A, A,
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT (
     ' RDR="', SMF26DEV, '"',
     ' ACCT="', SMF26ACT, '"',
     ' ROOM="', SMF26ROM, '"'
   ) (
     A, A, A,
     A, A, A,
     A, A, A
   );

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END JES2JOBPURGE;
1TSTERM: PROC;
   DCL 1 SMF34 UNALIGNED BASED(SMFP),
 %INCLUDE SMF34;

   DCL A CHAR(80) VARYING;

   PUT STRING(A) EDIT (
     ' JOB=', TRIM8(SMF34_TIVUIF),
     ' RDR=', F_TIMESTAMP(SMF34_TIVONDTE, SMF34_TIVONTME)
   ) (
     A, A, A, A
   );

   CALL EVENTSTART('TSSTEPTERM', A);

   PUT FILE(REPORT) SKIP EDIT (
     ' STEP=', SMF34_TIVINVNM,
     ' CC=', F_CC(SMF34_TIVSTAT, '0'B),
     ' PROGRAM=', SMF34_TIVPRGNM,
     ' TGETS=', F_BIN31(SMF34_TIVINCT),
     ' TPUTS=', F_BIN31(SMF34_TIVOUTCT)
   ) (
     A, A,
     A, A,
     A, A,
     A, A,
     A, A
   );

   PUT FILE(REPORT) SKIP EDIT ('--') (A);

   RECORDS_SEL = RECORDS_SEL + 1;
 END TSTERM;
 END SMFPLNK;
/*
//LKED.SYSLIB  DD DSN=SYSC.PL1LIB,DISP=SHR
//             DD DSN=SYSC.LINKLIB,DISP=SHR
//*            DD DSN=JAY01.Y2K.LOADLIB,DISP=SHR
//LKED.SYSLMOD DD DSN=WEGSCD.PLISMF.LOADLIB,DISP=OLD
//LKED.SYSPRINT DD SYSOUT=*
//*
//GO      EXEC PGM=PLISMFS,
//             PARM=''
//STEPLIB   DD DSN=WEGSCD.PLISMF.LOADLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*
//REPORT    DD SYSOUT=*,DCB=(RECFM=F,BLKSIZE=80)
//*MFDATA   DD DSN=SMF.DAILY.DATA(0),DISP=(OLD,PASS)
//SMFDATA   DD DSN=WEGSCD.SMF,DISP=(OLD,PASS)
//*MFDATA   DD DSN=SYS1.MANY,DISP=SHR
