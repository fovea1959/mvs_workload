         TITLE 'Y2KGTOA - COMPUTE ASTRO NUMBER FROM GREGORIAN DATE'
*                                                                     *
*   YY   YY   222   KK   KK  GGGGG TTTTTTTT  OOOOO     A              *
*   YY   YY  2   2  KK  KK  GG   GG   TT    OO   OO   AAA             *
*   YY   YY      2  KK KK   GG   GG   TT    OO   OO  AA AA            *
*    YY YY       2  KKKK    GG        TT    OO   OO AA   AA           *
*     YYY     222   KKKK    GG  GGG   TT    OO   OO AA   AA           *
*     YY     2      KK KK   GG   GG   TT    OO   OO AAAAAAA           *
*     YY     2      KK  KK  GG   GG   TT    OO   OO AA   AA           *
*     YY     22222  KK   KK  GGGGG    TT     OOOOO  AA   AA           *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE COMPUTES THE ASTRONOMICAL NUMBER FOR A           *
*    GIVEN GREGORIAN DATE (MMDDYYYY)                                  *
*                                                                     *
*    1.  VALID INPUT YEARS FOR THIS ROUTINE ARE THE YEARS 1601        *
*        THROUGH 3399 A. D. (INCLUSIVE)                               *
*                                                                     *
*    2.  VALID INPUT MONTH VALUES FOR THIS ROUTINE ARE 01 THROUGH 12. *
*                                                                     *
*    3.  VALID INPUT DAY VALUES FOR THIS ROUTINE ARE 01 THROUGH 31    *
*        WITH EXCEPTIONS FOR THE MONTHS LISTED:                       *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE MMDDYYYY, WHERE MM = THE 2 DIGIT     *
*        MONTH VALUE, DD = THE 2 DIGIT DAY VALUE, AND YYYY = THE      *
*        4 DIGIT YEAR VALUE.                                          *
*                                                                     *
*    5.  THREE FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:        *
*        1)  AN 8 BYTE FIELD CONTAINING THE DATE (IN ZONED-           *
*            DECIMAL FORMAT) FOR WHICH THE ASTRONOMICAL NUMBER IS     *
*            TO BE CALCULATED,                                        *
*        2)  A 1 BYTE ZONED-DECIMAL RETURN CODE, AND                  *
*        3)  A 7 BYTE FIELD WHICH WILL RECEIVE THE ASTRONOMICAL       *
*            NUMBER (IN ZONED-DECIMAL FORMAT).                        *
*        THE ROUTINE WILL NOT ALTER THE DATE PASSED TO IT.            *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KGTOA,(DATE)                           *
*                         . . .                                       *
*             DATE     DS    ZL8'01011997'                            *
*             RC       DS    ZL1'0'                                   *
*             ANUM     DS    ZL7'0000000'                             *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  GTOA-PARAMETERS.                                    *
*                 02  DATE PIC 9(8) VALUE 01011997.                   *
*                 02  RC   PIC 9(1) VALUE 0.                          *
*                 02  ANUM PIC 9(7) VALUE 0.                          *
*             CALL 'Y2KGTOA' USING GTOA-PARAMETERS.                   *
*                                                                     *
*    6.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE DATE FIELD.        *
*        INVALID DATA ARE DETERMINED IF THE FIELD'S LOW ORDER         *
*        BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE OF            *
*        X'C', X'D' OR X'F'), OR IF THE PRECEDING BYTES' ZONES        *
*        ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER NIBBLE       *
*        CONTAINS A VALUE GREATER THAN X'9'.                          *
*                                                                     *
*        4 INDICATES THE VALUE OF THE YEAR SPECIFIED WAS NOT IN       *
*        THE RANGE SPECIFIED IN 1 (ABOVE).                            *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED WAS NOT IN      *
*        THE RANGE SPECIFIED IN 2 (ABOVE).                            *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED WAS NOT IN        *
*        THE RANGE SPECIFIED IN 3 (ABOVE).                            *
*                                                                     *
*    7.  UPON SUCCESSFUL EXECUTION, THE ASTRONOMICAL NUMBER FOR THE   *
*        DATE WILL BE PLACED IN THE 3RD PARAMETER FIELD (ANUM).  IF   *
*        THE RETURN CODE IS A NON-ZERO VALUE (UNSUCCESSFUL            *
*        EXECUTION), THE ANUM FIELD WILL CONTAIN ZEROS.               *
* ------------------------------------------------------------------- *
* CHANGE LOG:                                                         *
* 0.1 04/17/2008 - CHANGED METHOD OF DETERMINING LEAP YEAR AT THE     *
*                  SUGGESTION OF ANGEL LUIS DOMINGUEZ.  TESTS ARE     *
*                  NOW DONE ON BINARY FORM OF YEAR, ELIMINATING THE   *
*                  USE OF PACKED DECIMAL INSTRUCTIONS.  TESTS ON MY   *
*                  EMULATED HARDWARE SHOW A SAVINGS OF 3.13 SECONDS   *
*                  ON 500,000 ITERATIONS.                             *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KGTOA  CSECT
          PRINT NOGEN
         EYEC  'RETURN ASTRO NUMBER FOR GREGORIAN DATE'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KGTOA,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KGTOA GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KGTOA GETMAIN ENDS'
*
*    INITIALIZE RETURN CODE AND ANUM PARAMETER FIELDS.
*
         MVI   PRC,C'0'                ASSUME GOOD RETURN
         MVC   PRC+1(7),PRC            NULL ASTRONOMICAL NUMBER
*
*    TEST DATE FOR INVALID CHARACTER
*
         LA    R2,PDATE                ADDRESS PASSED DATE
         LA    R3,7                    LENGTH MINUS 1
P1VLOOP  CLI   0(R2),X'F0'             TEST LESS THAN C'0'
         BL    P1ERR1                  IF YES, DATE CONTAINS BAD DATA
         CLI   0(R2),X'F9'             TEST GREATER THAN C'9'
         BH    P1ERR1                  IF YES, DATE CONTAINS BAD DATA
         LA    R2,1(0,R2)              ADDRESS NEXT BYTE
         BCT   R3,P1VLOOP              CONTINUE TESTING
         IC    R3,0(,R2)               LOAD RIGHT-MOST CHARACTER
         LR    R4,R3                   COPY INTO R4
         N     R3,=F'15'               ISOLATE DIGIT PORTION
         CH    R3,=H'9'                TEST GREATER THAN 9
         BH    P1ERR1                  IF YES, DATE CONTAINS BAD DATA
         SRL   R4,4                    ISOLATE ZONE PORTION
         CH    R4,=H'12'               TEST FOR 'C' ZONE
         BE    P1OK1                   IF YES, DATE IS VALID NUMERIC
         CH    R4,=H'13'               TEST FOR 'D' ZONE
         BE    P1OK1                   IF YES, DATE IS VALID NUMERIC
         CH    R4,=H'15'               TEST FOR 'F' ZONE
         BE    P1OK1                   IF YES, DATE IS VALID NUMERIC
*
*    DATE CONTAINED AN INVALID CHARACTER
*
P1ERR1   MVI   PRC,C'2'                INDICATE BAD DATA
         B     RETURN                  AND RETURN TO CALLER
*
*    TEST YEAR FOR VALID RANGE
*
P1OK1    PACK  YEAR(4),PDATE+4(4)      PACK PASSED YEAR
         CP    YEAR(4),=P'1601'        IS YEAR PRIOR TO 1601?
         BL    P1ERR2                  IF YES, YEAR NOT VALID
         CP    YEAR(4),=P'3399'        IS YEAR AFTER 3399?
         BNH   P1OK2                   IF NOT, YEAR IS VALID
*
*    YEAR CONTAINED AN INVALID VALUE (OUT OF RANGE)
*
P1ERR2   MVI   PRC,C'4'                INDICATE BAD VALUE
         B     RETURN                  AND RETURN TO CALLER
*
*    TEST MONTH FOR VALID RANGE
*
P1OK2    PACK  MONTH(2),PDATE(2)       PACK PASSED MONTH
         CP    MONTH(2),=P'1'          IS MONTH ZERO?
         BL    P1ERR3                  IF YES, MONTH NOT VALID
         CP    MONTH(2),=P'12'         IS MONTH GREATER THAN 12?
         BNH   P1OK3                   IF NOT, MONTH IS VALID
*
*    MONTH CONTAINED AN INVALID VALUE (OUT OF RANGE)
*
P1ERR3   MVI   PRC,C'6'                INDICATE BAD VALUE
         B     RETURN                  AND RETURN TO CALLER
*
*    DETERMINE LEAP YEAR STATUS
*
P1OK3    MVI   LEAP,C'0'               ASSUME NOT A LEAP YEAR
         MVO   B3(3),YEAR+1(3)         DROP SIGN                    0.1
         TM    B3+1,X'01'              ODD YEAR?                    0.1
         BO    P1CON4                  IF YES, IT IS *NOT* LEAP YEAR0.1
         TM    B3+1,X'12'              EVENLY DIVISIBLE BY 4?       0.1
         BM    P1CON4                  IF NO, IT IS *NOT* LEAP YEAR 0.1
         CLI   B3+1,X'00'              DOES YEAR END IN 00?         0.1
         BNE   ISLEAP                  IF YES, IT IS A LEAP YEAR    0.1
         TM    B3,X'01'                IS CENTURY ODD?              0.1
         BO    P1CON4                  IF YES, IT IS *NOT* LEAP YEAR0.1
         TM    B3,X'12'                EVENLY DIVISIBLE BY 400?     0.1
         BM    P1CON4                  IF NO, IT IS *NOT* LEAP YEAR 0.1
*                                      ELSE IT IS A LEAP YEAR       0.1
*
*    TEST FOR LEAP YEAR SUCCEEDED, RESET LEAP INDICATOR.
*
ISLEAP   MVI   LEAP,C'1'               INDICATE LEAP YEAR
*
*    DETERMINE MAXIMUM DAYS FOR GIVEN MONTH
*
P1CON4   LA    R4,DIM                  GET ADDRESS OF DAY TABLE
         CLI   LEAP,C'0'               IS THIS LEAP YEAR?
         BE    P1CON4A                 IF NOT, ADDRESS IS OK
         LA    R4,2(,R4)               ELSE ADJUST TO LEAP ENTRY
P1CON4A  ZAP   DWORK(8),MONTH          GET MONTH INTO DOUBLEWORD
         CVB   R3,DWORK                CONVERT TO BINARY
         BCTR  R3,0                    DECREMENT BY 1 (ZERO BASE)
         SLL   R3,2                    MULTIPLY BY TABLE ENTRY LENGTH
         LA    R4,0(R3,R4)             LOAD ENTRY ADDRESS INTO R4
*
*    TEST DAY FOR VALID RANGE
*
         PACK  DAY(2),PDATE+2(2)       PACK PASSED DAY
         ZAP   DAY,DAY                 CONVERT SIGN OF DAY TO X'C'
         CP    DAY(2),=P'1'            IS DAY ZERO?
         BL    P1ERR4                  IF YES, DAY NOT VALID
         CLC   DAY(2),0(R4)            IS DAY GREATER THAN MAX?
         BNH   P1OK4                   IF NOT, MONTH IS VALID
*
*    DAY CONTAINED AN INVALID VALUE (OUT OF RANGE)
*
P1ERR4   MVI   PRC,C'8'                INDICATE BAD VALUE
         B     RETURN                  AND RETURN TO CALLER
*
*    COMPUTE ASTRONOMICAL NUMBER
*
P1OK4    CP    MONTH(2),=P'2'          IS MONTH GREATER THAN 2?
         BH    COMP001                 YES
*
         AP    MONTH(2),=P'9'          INCREMENT MONTH BY 9
         SP    YEAR(4),=P'1'           DECREMENT YEAR BY 1
         B     COMP002                 PROCEED WITH CONVERSION
*
COMP001  SP    MONTH(2),=P'3'          DECREMENT MONTH BY 3
*
COMP002  DP    YEAR,=P'100'            DIVIDE BY 100
         ZAP   TA,YEAR(2)              SAVE QUOTIENT IN TA
         ZAP   TB,YEAR+2(2)            SAVE REMAINDER IN TB
         MP    TA,=P'146097'           MULTIPLY BY 146097
         DP    TA,=P'4'                DIVIDE BY 4
         ZAP   TA,TA(7)                SHIFT QUOTIENT OVER REMAINDER
*
         MP    TB,=P'1461'             MULTIPLY BY 1461
         DP    TB,=P'4'                DIVIDE BY 4
         ZAP   TB,TB(7)                SHIFT QUOTIENT OVER REMAINDER
*
         ZAP   TC,MONTH
         MP    TC,=P'153'              MULTIPLY BY 153
         AP    TC,=P'2'                ADD 2
         DP    TC,=P'5'                DIVIDE BY 5
         ZAP   TC,TC(7)                SHIFT QUOTIENT OVER REMAINDER
         AP    TC,DAY                  ADD DAY
         AP    TC,=P'1721119'          ADD 1721119
*
         ZAP   TX,TA                   COMBINE THE ANSWERS
         AP    TX,TB
         AP    TX,TC
*
         UNPK  PANUM(7),TX+4(4)        UNPACK ANUM
         OI    PANUM+6,X'F0'           CLEAR SIGN
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
         EJECT
* ******************************************************************* *
* **************************** CONSTANTS **************************** *
* ******************************************************************* *
*
*    MAXIMUM DAYS IN MONTHS ... EACH ENTRY HAS 2 VALUES, THE 1ST FOR
*    A NORMAL (NON-LEAP) YEAR AND THE 2ND FOR A LEAP YEAR
*
DIM      DC    PL2'31',PL2'31'           JANUARY
         DC    PL2'28',PL2'29'           FEBRUARY
         DC    PL2'31',PL2'31'           MARCH
         DC    PL2'30',PL2'30'           APRIL
         DC    PL2'31',PL2'31'           MAY
         DC    PL2'30',PL2'30'           JUNE
         DC    PL2'31',PL2'31'           JULY
         DC    PL2'31',PL2'31'           AUGUST
         DC    PL2'30',PL2'30'           SEPTEMBER
         DC    PL2'31',PL2'31'           OCTOBER
         DC    PL2'30',PL2'30'           NOVEMBER
         DC    PL2'31',PL2'31'           DECEMBER
* ******************************************************************* *
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
MONTH    DS    PL2                     GREGORIAN MONTH
DAY      DS    PL2                     GREGORIAN DAY
YEAR     DS    PL4                     GREGORIAN YEAR
B3       DS    XL3                     WORK AREA FOR BINARY YEAR    0.1
TA       DS    PL8                     INTERMEDIATE ANSWER
TB       DS    PL8                     INTERMEDIATE ANSWER
TC       DS    PL8                     INTERMEDIATE ANSWER
TX       DS    PL8                     INTERMEDIATE ANSWER
LEAP     DS    CL1                     LEAP STATUS
DWORK    DS    D                       DOUBLEWORD WORK FIELD
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATE    DS    CL8                     DATE TO BE PROCESSED
PRC      DS    CL1                     RETURN CODE (0/2/4/6/8)
PANUM    DS    ZL7                     ASTRONOMICAL NUMBER
* ******************************************************************* *
         END
