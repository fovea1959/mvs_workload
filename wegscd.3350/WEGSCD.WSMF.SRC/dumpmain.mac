 /* DUMP ALL SMF RECORDS */

 SMFDUMP: PROC(PARM_STRING) OPTIONS(MAIN);

   DCL PARM_STRING CHAR(100) VARYING;

   DCL SMFRDR      ENTRY;

   DCL REPORT      PRINT;

   CALL SMFRDR(PARM_STRING);
   RETURN;
 END SMFDUMP;
*PROCESS('M,NS2');
 /* PROCESS IPL EVENT */
 P$00: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF00 UNALIGNED BASED(SMFP),
 %INCLUDE S$S00;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P0 LIKE SMF00;

   DCL REPORT      PRINT;
   P0 = SMF00;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P0);
 END P$00;
*PROCESS('M,NS2');
 /* PROCESS STEP TERMINATION  */
 P$04: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF04 UNALIGNED BASED(SMFP),
 %INCLUDE S$S04;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P4 LIKE SMF04;

   DCL 1 SMF04ACCT UNALIGNED BASED(SMF4ACCTP),
 %INCLUDE S$S04ACC;
   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P4ACCT LIKE SMF04ACCT;

   DCL P_OFFSET FIXED BIN(31);

 %INCLUDE I$PTRS;

   DCL 1 ACCOUNTING UNALIGNED,
 %INCLUDE ACCTNGF;

   P_OFFSET = PTRDIFF(SMFP, ADDR(SMF04.SMF4LENN));
   P_OFFSET = P_OFFSET + SMF04.SMF4LENN;
   SMF4ACCTP = PTRADD (SMFP, P_OFFSET);

   P4 = SMF04;
   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P4);

   P4ACCT = SMF04ACCT;

   PUT FILE(REPORT) SKIP DATA(P4ACCT);

   DCL (PA, PP) POINTER;
   PA = ADDR(ACCOUNTING);
   PP = ADDR(SMF04ACCT.SMF4NAF);

   CALL ACCOUNTING_EXTRACT (PA, PP);
   PUT FILE(REPORT) DATA(ACCOUNTING);
 %INCLUDE ACCTNGX;
 END P$04;
*PROCESS('M,NS2');
 /* PROCESS JOB TERMINATION  */
 P$05: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF05 UNALIGNED BASED(SMFP),
 %INCLUDE S$S05;
   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P5 LIKE SMF05;

 %INCLUDE I$PTRS;

   DCL 1 ACCOUNTING UNALIGNED,
 %INCLUDE ACCTNGF;

   P5 = SMF05;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P5);

   DCL (PA, PP) POINTER;
   PA = ADDR(ACCOUNTING);
   PP = ADDR(SMF05.SMF5ACTF);

   CALL ACCOUNTING_EXTRACT (PA, PP);
   PUT FILE(REPORT) DATA(ACCOUNTING);
 %INCLUDE ACCTNGX;
 END P$05;
*PROCESS('M,NS2');
 /* PROCESS OUTPUT WRITER  */
 P$06: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF06 UNALIGNED BASED(SMFP),
 %INCLUDE S$S06;
   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P6 LIKE SMF06;

   P6 = SMF06;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P6);

 END P$06;
*PROCESS('M,NS2');
 /* PROCESS LOST SMF DATA */
 P$07: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF07 UNALIGNED BASED(SMFP),
 %INCLUDE S$S07;
   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P7 LIKE SMF07;

   P7 = SMF07;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P7);
 END P$07;
*PROCESS('M,NS2');
 P$14: PROC (CP, SMFP);
     DCL (CP, SMFP) POINTER;
     RETURN;
 END P$14;
*PROCESS('M,NS2');
 /* PROCESS JOB INITIATION */
 P$20: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF20 UNALIGNED BASED(SMFP),
 %INCLUDE S$S20;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P20 LIKE SMF20;


   DCL 1 ACCOUNTING UNALIGNED,
 %INCLUDE ACCTNGF;

   P20 = SMF20;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P20);

   DCL (PA, PP) POINTER;
   PA = ADDR(ACCOUNTING);
   PP = ADDR(SMF20.SMF20NAF);

   CALL ACCOUNTING_EXTRACT (PA, PP);
   PUT FILE(REPORT) DATA(ACCOUNTING);
 %INCLUDE I$PTRS;
 %INCLUDE ACCTNGX;
 END P$20;
*PROCESS('M,NS2');
 /* PROCESS JES2 JOB PURGE */
 P$26: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF26 UNALIGNED BASED(SMFP),
 %INCLUDE S$S26;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P26 LIKE SMF26;

   DCL SMF26EVTP POINTER;

   DCL 1 SMF26EVENTS UNALIGNED BASED(SMF26EVTP),
 %INCLUDE S$S26EVT;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P26EVENTS LIKE SMF26EVENTS;

   DCL SMF26ACTP POINTER;

   DCL 1 SMF26ACTUALS UNALIGNED BASED(SMF26ACTP),
 %INCLUDE S$S26ACT;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P26ACTUALS LIKE SMF26ACTUALS;

 %INCLUDE I$PTRS;

   DCL P_OFFSET FIXED BIN(31);

   P_OFFSET = PTRDIFF(SMFP, ADDR(SMF26.SMF26LN1));
   P_OFFSET = P_OFFSET + SMF26.SMF26LN1;
   SMF26EVTP = PTRADD(SMFP, P_OFFSET);
   P_OFFSET = P_OFFSET + SMF26EVENTS.SMF26LN2;
   SMF26ACTP = PTRADD(SMFP, P_OFFSET);

   P26 = SMF26;
   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P26);

   P26EVENTS = SMF26EVENTS;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P26EVENTS);

   P26ACTUALS = SMF26ACTUALS;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P26ACTUALS);
 END P$26;
*PROCESS('M,NS2');
 /* PROCESS TSO USER TERMINATION */
 P$34: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF34 UNALIGNED BASED(SMFP),
 %INCLUDE S$S34;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P34 LIKE SMF34;

   P34 = SMF34;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P34);
 END P$34;
*PROCESS('M,NS2');
 /* PROCESS MF1/1 CPU USAGE */
 P$70: PROC (CP, SMFP);
   DCL (CP, SMFP) POINTER;

   DCL 1 SMF70 UNALIGNED BASED(SMFP),
 %INCLUDE S$S70;

   /* A NON-BASED COPY SO THAT PUT DATA() WORKS */
   DCL 1 P70 LIKE SMF70;

   DCL SMF70CPUDATA_P POINTER;
   DCL 1 SMF70CPUDATA UNALIGNED BASED(SMF70CPUDATA_P),
 %INCLUDE S$S70CPU;

   DCL 1 P70CPUDATA LIKE SMF70CPUDATA;

   DCL P_OFFSET FIXED BIN(31);

 %INCLUDE I$PTRS;

   DCL (CPUWAIT,INREADY,OUTREADY,TOTIN,TOTTSO,TOTBATCH,
       TOTSTC,OUTWAIT)       FLOAT DEC(6),
      (INTERVAL_LENGTH,WAIT_SECONDS,TOTAL_WAIT_SECONDS) FLOAT DEC(16),
       FLOATX FLOAT DEC(16) INIT(4.294967296E9),  /*2.0E0**32 */
       FLOATC FLOAT DEC(16) INIT(4.096E9),  /* (2.E0**12)*(1.E6) */
       NDUM FIXED BIN(31),
      (MOD,TRUNC,FLOAT) BUILTIN;

   P70 = SMF70;

   P_OFFSET = PTRDIFF(SMFP, ADDR(SMF70.SMF70SCC));
   P_OFFSET = P_OFFSET + SMF70.SMF70SCC;

   PUT FILE(REPORT) SKIP EDIT(' ') (A);
   PUT FILE(REPORT) SKIP DATA(P70);

   TOTAL_WAIT_SECONDS = 0;
   /* GET INTERVAL TIME IN SECONDS - DOUBLE PRECISION - MMSSTTTF */
   INTERVAL_LENGTH = TRUNC(SMF70.SMF70INT/1.0E5) * 60
            + MOD(SMF70.SMF70INT,1.0E5) / 1.0E3;

   DO I = 1 TO SMF70.SMF70CPU;
     PUT FILE(REPORT) SKIP DATA(P_OFFSET);

     SMF70CPUDATA_P = PTRADD (SMFP, P_OFFSET);
     P70CPUDATA = SMF70CPUDATA;
     PUT FILE(REPORT) SKIP DATA(P70CPUDATA);

     WAIT_SECONDS = SMF70CPUDATA.SMF70WAT;
     WAIT_SECONDS = WAIT_SECONDS / FLOATC;
     TOTAL_WAIT_SECONDS = TOTAL_WAIT_SECONDS + WAIT_SECONDS;

     CPUWAIT = WAIT_SECONDS / INTERVAL_LENGTH;
     PUT FILE(REPORT) SKIP
       DATA(WAIT_SECONDS, INTERVAL_LENGTH, CPUWAIT);

     P_OFFSET = P_OFFSET + SMF70.SMF70SCD;
   END;

   /* TAKE AVERAGE OF CPU(S) */
   CPUWAIT = TOTAL_WAIT_SECONDS /
     (INTERVAL_LENGTH * SMF70.SMF70CPU);
   PUT FILE(REPORT) SKIP
     DATA(TOTAL_WAIT_SECONDS, INTERVAL_LENGTH, CPUWAIT);

   /* CALL CALCMF1TIME(SMFP); */
 END P$70;
